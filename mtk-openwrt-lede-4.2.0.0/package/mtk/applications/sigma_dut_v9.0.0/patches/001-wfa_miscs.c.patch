Index: sigma_dut/lib/wfa_miscs.c
===================================================================
--- sigma_dut.orig/lib/wfa_miscs.c
+++ sigma_dut/lib/wfa_miscs.c
@@ -98,7 +98,7 @@ int isIpV4Addr(char *str)
     else
         return WFA_SUCCESS;
 }
-
+/* 
 inline double wfa_timeval2double(struct timeval *tval)
 {
     return ((double) tval->tv_sec + (double) tval->tv_usec*1e-6);
@@ -116,7 +116,7 @@ inline double wfa_ftime_diff(struct time
 
     dtime = wfa_timeval2double(t2) - wfa_timeval2double(t1);
     return dtime ;
-}
+} */
 
 int wfa_itime_diff(struct timeval *t1, struct timeval *t2)
 {
@@ -155,7 +155,7 @@ int wfa_itime_diff(struct timeval *t1, s
  * THe following two functions are converting Little Endian to Big Endian.
  * If your machine is already a Big Endian, you may flag it out.
  */
-inline void int2BuffBigEndian(int val, char *buf)
+/* inline void int2BuffBigEndian(int val, char *buf)
 {
     char *littleEn = (char *)&val;
 
@@ -163,9 +163,9 @@ inline void int2BuffBigEndian(int val, c
     buf[1] = littleEn[2];
     buf[2] = littleEn[1];
     buf[3] = littleEn[0];
-}
+} */
 
-int bigEndianBuff2Int(char *buff)
+/* int bigEndianBuff2Int(char *buff)
 {
     int val;
     char *strval = (char *)&val;
@@ -176,7 +176,7 @@ int bigEndianBuff2Int(char *buff)
     strval[3] = buff[0];
 
     return val;
-}
+} */
 
 int wfa_estimate_timer_latency()
 {
